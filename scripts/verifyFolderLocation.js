// scripts/verifyFolderLocation.js
const { google } = require('googleapis');
const { jwtClient } = require('../config/google');
require('dotenv').config();

/**
 * Script para verificar que la carpeta base est√© en el Shared Drive
 */
const verifyFolderLocation = async () => {
  console.log('üîç Verificando ubicaci√≥n de la carpeta base...\n');

  try {
    // Verificar configuraci√≥n
    console.log('üìã Configuraci√≥n actual:');
    console.log(`GOOGLE_SHARED_DRIVE_ID: ${process.env.GOOGLE_SHARED_DRIVE_ID || 'NO CONFIGURADO'}`);
    console.log(`GOOGLE_DRIVE_FOLDER_ID: ${process.env.GOOGLE_DRIVE_FOLDER_ID || 'NO CONFIGURADO'}\n`);

    if (!process.env.GOOGLE_SHARED_DRIVE_ID) {
      console.error('‚ùå ERROR: GOOGLE_SHARED_DRIVE_ID no est√° configurado');
      return;
    }

    if (!process.env.GOOGLE_DRIVE_FOLDER_ID) {
      console.error('‚ùå ERROR: GOOGLE_DRIVE_FOLDER_ID no est√° configurado');
      return;
    }

    if (!jwtClient) {
      console.error('‚ùå ERROR: No se pudo inicializar el cliente JWT');
      return;
    }

    // Crear cliente de Drive
    const drive = google.drive({ version: 'v3', auth: jwtClient });

    // Verificar que la carpeta base existe y obtener su informaci√≥n
    console.log('üîç Verificando carpeta base...');
    
    try {
      const folderInfo = await drive.files.get({
        fileId: process.env.GOOGLE_DRIVE_FOLDER_ID,
        fields: 'id, name, parents, driveId',
        supportsAllDrives: true,
        supportsTeamDrives: true,
      });
      
      console.log(`‚úÖ Carpeta base encontrada: ${folderInfo.data.name}`);
      console.log(`   ID: ${folderInfo.data.id}`);
      console.log(`   Drive ID: ${folderInfo.data.driveId || 'Mi unidad'}`);
      console.log(`   Parents: ${folderInfo.data.parents?.join(', ') || 'Ra√≠z'}`);
      
      // Verificar si est√° en el Shared Drive
      if (folderInfo.data.driveId === process.env.GOOGLE_SHARED_DRIVE_ID) {
        console.log('‚úÖ La carpeta base est√° en el Shared Drive correcto');
      } else if (folderInfo.data.driveId) {
        console.log('‚ùå La carpeta base est√° en un Shared Drive diferente');
        console.log(`   Esperado: ${process.env.GOOGLE_SHARED_DRIVE_ID}`);
        console.log(`   Actual: ${folderInfo.data.driveId}`);
      } else {
        console.log('‚ùå La carpeta base est√° en "Mi unidad" (Drive personal)');
        console.log('üí° SOLUCI√ìN: Crea la carpeta base dentro del Shared Drive');
      }
      
    } catch (error) {
      console.error('‚ùå Error al verificar carpeta base:', error.message);
      return;
    }

    // Verificar acceso al Shared Drive
    console.log('\nüîç Verificando acceso al Shared Drive...');
    
    try {
      const driveInfo = await drive.drives.get({
        driveId: process.env.GOOGLE_SHARED_DRIVE_ID,
        fields: 'id, name, capabilities',
      });
      
      console.log(`‚úÖ Shared Drive accesible: ${driveInfo.data.name}`);
      console.log(`   ID: ${driveInfo.data.id}`);
      
      // Verificar si podemos crear archivos
      if (driveInfo.data.capabilities?.canAddChildren) {
        console.log('‚úÖ Permisos de escritura confirmados');
      } else {
        console.log('‚ö†Ô∏è El Service Account no tiene permisos de escritura');
      }
      
    } catch (error) {
      console.error('‚ùå Error al acceder al Shared Drive:', error.message);
      console.log('üí° Soluci√≥n: Verifica que el Service Account sea miembro del Shared Drive');
      return;
    }

    console.log('\nüéØ Verificaci√≥n completada!');
    
  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
};

// Ejecutar verificaci√≥n
verifyFolderLocation(); 